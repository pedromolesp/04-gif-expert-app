{"version":3,"sources":["components/AddCategory.js","helpers/getGifs.js","components/GifGridItem.js","components/GifGrid.js","hooks/useFetchGifs.js","components/GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setinputValue","onSubmit","e","preventDefault","trim","length","cats","type","value","onChange","target","getGifs","category","a","url","encodeURI","fetch","resp","json","data","gifs","map","img","id","title","images","downsized_medium","GifGridItem","className","src","alt","GifGrid","loading","state","setState","useEffect","then","imgs","useFetchGifs","GifExpertApp","categories","setcategories","i","ReactDOM","render","document","getElementById"],"mappings":"mMAIaA,EAAc,SAAC,GAAuB,IAArBC,EAAoB,EAApBA,cAAoB,EACVC,mBAAS,IADC,mBACvCC,EADuC,KAC3BC,EAD2B,KAgB9C,OACI,sBAAMC,SAZW,SAACC,GAClBA,EAAEC,iBAGEJ,EAAWK,OAAOC,OAAS,IAE3BR,GAAc,SAAAS,GAAI,OAAKP,GAAL,mBAAoBO,OACtCN,EAAc,MAKlB,SAEI,uBACIO,KAAK,OACLC,MAAOT,EACPU,SApBc,SAACP,GACvBF,EAAcE,EAAEQ,OAAOF,a,+BCPlBG,EAAO,uCAAG,WAAOC,GAAP,uBAAAC,EAAA,4DACH,mCACVC,EAFa,iDAEmCC,UAAUH,GAF7C,+DAGAI,MAAMF,GAHN,cAGbG,EAHa,gBAIIA,EAAKC,OAJT,uBAIXC,EAJW,EAIXA,KACFC,EAAOD,EAAKE,KAAI,SAAAC,GAAQ,IAAD,EACzB,MAAO,CACHC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXV,IAAG,UAAEQ,EAAIG,cAAN,aAAE,EAAYC,iBAAiBZ,QATvB,kBAYZM,GAZY,4CAAH,sDCEPO,EAAc,SAAC,GAAuB,EAArBJ,GAAsB,IAAlBC,EAAiB,EAAjBA,MAAOV,EAAU,EAAVA,IAErC,OACI,sBAAKc,UAAU,yCAAf,UACI,qBAAKC,IAAKf,EAAKgB,IAAKN,IACpB,4BAAIA,QCFHO,EAAU,SAAC,GAAkB,IAAhBnB,EAAe,EAAfA,SAAe,ECHb,SAACA,GAAc,IAAD,EACZd,mBAAS,CAC/BqB,KAAM,GACNa,SAAS,IAHyB,mBAC/BC,EAD+B,KACxBC,EADwB,KAkBtC,OAZAC,qBAAU,WAENxB,EAAQC,GAAUwB,MAAK,SAAAC,GACnBH,EAAS,CACLf,KAAMkB,EACNL,SAAS,SAKlB,CAACpB,IAEGqB,EDd2BK,CAAa1B,GAAjCa,EADuB,EAC7BN,KAAca,EADe,EACfA,QAEtB,OACI,qCACI,oBAAIJ,UAAU,oCAAd,SAAmDhB,IAClDoB,GAAW,mBAAGJ,UAAU,mCAAb,wBACZ,qBAAKA,UAAU,YAAf,SACI,6BACKH,EAAOJ,KAAI,SAAAC,GAAG,OACX,cAAC,EAAD,eAEQA,GADCA,EAAIC,eEgBtBgB,EA3BM,WAAM,MAEazC,mBAAS,CAAC,cAFvB,mBAEhB0C,EAFgB,KAEJC,EAFI,KAOvB,OACI,qCACI,8CACA,cAAC,EAAD,CAAa5C,cAAe4C,IAC5B,uBACA,6BAEQD,EAAWnB,KAAI,SAACT,EAAU8B,GAAX,OACX,cAAC,EAAD,CAEI9B,SAAUA,GADLA,Y,MChBjC+B,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.a5646202.chunk.js","sourcesContent":["import React, { useState } from 'react'\nimport PropTypes from \"prop-types\";\n\n\nexport const AddCategory = ({ setCategories }) => {\n    const [inputValue, setinputValue] = useState('');\n    const handleInputChange = (e) => {\n        setinputValue(e.target.value);\n    };\n    const handleSubmit = (e) => {\n        e.preventDefault();\n\n\n        if (inputValue.trim().length > 2) {\n\n            setCategories(cats => [inputValue, ...cats]);\n            setinputValue('');\n        }\n\n    };\n    return (\n        <form onSubmit={handleSubmit}>\n\n            <input\n                type=\"text\"\n                value={inputValue}\n                onChange={handleInputChange}\n\n            ></input>\n        </form>\n    )\n}\nAddCategory.propTypes = {\n    setCategories: PropTypes.func.isRequired\n}\n","export const getGifs = async (category) => {\n    const api_key = \"0tvd5dyESMawJWm3Sf8qRu19SV2ozR91\";\n    const url = `https://api.giphy.com/v1/gifs/search?q=${encodeURI(category)}&api_key=0tvd5dyESMawJWm3Sf8qRu19SV2ozR91&limit=10`;\n    const resp = await fetch(url);\n    const { data } = await resp.json();\n    const gifs = data.map(img => {\n        return {\n            id: img.id,\n            title: img.title,\n            url: img.images?.downsized_medium.url\n        };\n    })\n    return gifs;\n};","import React from 'react'\n\nexport const GifGridItem = ({ id, title, url }) => {\n    // console.log(props);\n    return (\n        <div className=\"card animate__animated animate__fadeIn\">\n            <img src={url} alt={title} />\n            <p>{title}</p>\n\n        </div>\n    )\n}\n","import React from 'react'\nimport { useFetchGifs } from '../hooks/useFetchGifs'\nimport { GifGridItem } from './GifGridItem';\n// import { getGifs } from '../helpers/getGifs';\n\nexport const GifGrid = ({ category }) => {\n    const { data: images, loading } = useFetchGifs(category);\n\n    return (\n        <>\n            <h3 className=\"animate__animated animate__fadeIn\">{category}</h3>\n            {loading && <p className=\"animate__animated animate__flash\">Loading...</p>}\n            <div className=\"card-grid\">\n                <ol>\n                    {images.map(img => (\n                        <GifGridItem\n                            key={img.id}\n                            {...img}\n                        />\n                    ))}\n                </ol>\n            </div>\n        </>\n\n    )\n}\n","import { useState, useEffect } from 'react';\nimport { getGifs } from '../helpers/getGifs';\nexport const useFetchGifs = (category) => {\n    const [state, setState] = useState({\n        data: [],\n        loading: true\n    });\n\n    useEffect(() => {\n\n        getGifs(category).then(imgs => {\n            setState({\n                data: imgs,\n                loading: false\n            });\n\n        });\n\n    }, [category]);\n\n    return state;\n\n\n}","import React, { useState } from \"react\";\nimport { AddCategory } from \"./AddCategory\";\nimport { GifGrid } from \"./GifGrid\";\n\n\nconst GifExpertApp = () => {\n    // const categories = ['One punch', 'Samurai x', 'Dragon ball'];\n    const [categories, setcategories] = useState(['One punch']);\n    // const handleAdd = () => {\n    //     // setcategories([...categories, 'hamsterxhamster']);\n    //     setcategories(cats => [...cats, \"HunterxHunter\"]);   \n    // };\n    return (\n        <>\n            <h2>GifExpertApp</h2>\n            <AddCategory setCategories={setcategories} />\n            <hr />\n            <ol>\n                {\n                    categories.map((category, i) =>\n                        <GifGrid\n                            key={category}\n                            category={category} />\n                    )\n                }\n            </ol>\n\n        </>\n    );\n}\n\n\nexport default GifExpertApp;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport GifExpertApp from './components/GifExpertApp';\nimport './index.css';\n\nReactDOM.render(\n  <GifExpertApp />,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n"],"sourceRoot":""}